{"ast":null,"code":"import _slicedToArray from \"/Users/navigate_17/Desktop/fullinfot/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/navigate_17/Desktop/fullinfot/src/components/Images.tsx\";\nimport React, { useState } from \"react\";\nexport const Images = ({\n  imagesData\n}) => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        image = _useState2[0],\n        setImage = _useState2[1];\n\n  return imagesData.map((element, idx) => React.createElement(\"img\", {\n    className: \"image\",\n    onClick: () => setImage(element.id),\n    key: idx,\n    alt: element.title,\n    src: image === element.id ? element.url : element.thumbnailUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/navigate_17/Desktop/fullinfot/src/components/Images.tsx"],"names":["React","useState","Images","imagesData","image","setImage","map","element","idx","id","title","url","thumbnailUrl"],"mappings":";;AAAA,OAAOA,KAAP,IAA0CC,QAA1C,QAA0D,OAA1D;AAOA,OAAO,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsD;AAAA,oBAItEF,QAAQ,EAJ8D;AAAA;AAAA,QACnEG,KADmE;AAAA,QAC5DC,QAD4D;;AAM1E,SAAOF,UAAU,CAACG,GAAX,CACL,CAACC,OAAD,EAAiBC,GAAjB,KACE;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,OAAO,EAAE,MAAMH,QAAQ,CAACE,OAAO,CAACE,EAAT,CAFzB;AAGE,IAAA,GAAG,EAAED,GAHP;AAIE,IAAA,GAAG,EAAED,OAAO,CAACG,KAJf;AAKE,IAAA,GAAG,EAAEN,KAAK,KAAKG,OAAO,CAACE,EAAlB,GAAuBF,OAAO,CAACI,GAA/B,GAAqCJ,OAAO,CAACK,YALpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFG,CAAP;AAWD,CAjBM","sourcesContent":["import React, { Dispatch, SetStateAction, useState } from \"react\";\nimport { Photo } from \"../actions\";\n\ninterface ImagesProps {\n  imagesData: Photo[];\n}\n\nexport const Images = ({ imagesData }: ImagesProps): JSX.Element[] | any => {\n  const [image, setImage]: [\n    number | undefined,\n    Dispatch<SetStateAction<number | undefined>>\n  ] = useState();\n\n  return imagesData.map(\n    (element: Photo, idx: number): JSX.Element => (\n      <img\n        className=\"image\"\n        onClick={() => setImage(element.id)}\n        key={idx}\n        alt={element.title}\n        src={image === element.id ? element.url : element.thumbnailUrl}\n      ></img>\n    )\n  );\n};\n"]},"metadata":{},"sourceType":"module"}